@attribute [Route(RouteConst.Routes.SignIn)]
@inject NavigationManager NavigationManager
@inject CustomAuthentificationStateProvider AuthentificationService

<PageTitle>SignIn</PageTitle>

<div class="sign-in-container">
    <MudCard>
        <MudText Typo="Typo.h6">Register</MudText>

        <MudCardContent>
            <MudForm>
                <MudTextField T="string" Label="Username" InputType="InputType.Text" @bind-Value=@RegisterUserDTO.UserName required />

                <MudTextField T="string" Label="Vorname" InputType="InputType.Text" @bind-Value=@RegisterUserDTO.FirstName required />

                <MudTextField T="string" Label="Nachname" InputType="InputType.Text" @bind-Value=@RegisterUserDTO.LastName required />

                <MudTextField T="string" Label="Passwort" InputType="InputType.Password" @bind-Value=@RegisterUserDTO.Password required />

                <MudTextField T="string" Label="Passwort (wiederholen)" InputType="InputType.Password" @bind-Value=@RegisterUserDTO.Password required />

                <MudTextField T="string" Label="Email" InputType="InputType.Text" @bind-Value=@RegisterUserDTO.Email required />

                <MudTextField T="string" Label="Telefon" InputType="InputType.Telephone" @bind-Value=@RegisterUserDTO.Phone required />

                <MudTextField T="DateTime" Label="Geburstag" InputType="InputType.Date" @bind-Value=@RegisterDateTime required />

                <MudButton Variant="Variant.Filled" DisableElevation="true" OnClick=@OnSubmitRegister Color="MudBlazor.Color.Primary">Register</MudButton>
            </MudForm>
        </MudCardContent>
    </MudCard>
    <MudSpacer></MudSpacer>
    <MudCard>
        <MudCardHeader>Login</MudCardHeader>
        <MudCardContent>
            <MudForm>
                <MudTextField T="string" Label="Email" InputType="InputType.Text" @bind-Value=@UserLoginDTO.Email required />

                <MudTextField T="string" Label="Passwort" InputType="InputType.Password" @bind-Value=@UserLoginDTO.Password required />
                <MudLink Href=@RouteConst.Routes.ResetPasswordRequest>Passwort vergessen?</MudLink>
                <MudButton Variant="Variant.Filled" DisableElevation="true" OnClick=@OnSubmitLogin Color="MudBlazor.Color.Primary">Login</MudButton>
            </MudForm>
        </MudCardContent>
    </MudCard>
</div>

@code {
    public DateTime RegisterDateTime = DateTime.MinValue;
    public UserLoginDTO UserLoginDTO = new UserLoginDTO();
    public RegisterUserDTO RegisterUserDTO = new RegisterUserDTO();

    private CancellationTokenSource cancellationToken = new();

    protected override async Task OnInitializedAsync()
    {

    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            var token = await AuthentificationService.GetCurrentAuthentification(cancellationToken.Token);
            if (token.IsAuthentificated)
            {
                NavigationManager.NavigateTo("/");
            }
        }
    }
    public async Task OnSubmitLogin()
    {
        var response = await AuthentificationService.Login(UserLoginDTO.Email,UserLoginDTO.Password,cancellationToken.Token);
        if(response)
        {
            NavigationManager.NavigateTo("/dashboard");
        }
    }
    public async Task OnSubmitRegister()
    {
        RegisterUserDTO.DateOfBirth = RegisterDateTime;
        var response = await AuthentificationService.Register(RegisterUserDTO, cancellationToken.Token);
        if(response)
        {
            NavigationManager.NavigateTo("/register-success");//page welche info über erfolgreiche registrierung gibt und infos über das weitere vorgehen
        }
    }
}
@functions {


}
