@inject NavigationManager NavigationManager;
@inject ILocalStorageService LocalStorageService;
@inject IWebApiRestClient WebApiClient
@inject DialogHandler DialogHandler
@inject IConfiguration Configuration
@inject IExtendedNavigationManager ExtNavigationManager
@inject ISessionStorage SessionStorage

<MudNavMenu Bordered=false Class="ml-5 mr-5" Color="MudBlazor.Color.Info">
     <MudNavLink Href="@RouteConst.Routes.Home">
         <div style="color: #fff;">
             <MudIcon Icon="@Icons.Material.Outlined.Dashboard" />
             <span>Home</span>
         </div>
     </MudNavLink>
     <CascadingAuthenticationState>
         <AuthorizeView Policy="Admin">
             @if (hasLogin)
            {
                <MudNavGroup Expanded Style="">
                 <div style="color: #fff;">
                     <MudIcon Icon="@Icons.Material.Outlined.AdminPanelSettings" />
                     <span>Administration</span>
                 </div>
                     <MudNavLink Href="@RouteConst.Routes.DashBoard">
                         <div style="color: #fff;">
                         <MudIcon Icon="@Icons.Material.Outlined.Dashboard" />
                             <span>Dashboard</span>
                         </div>
                     </MudNavLink>

                     <MudNavLink Href="@RouteConst.Routes.BackendHealth">
                         <div style="color: #fff;">
                         <MudIcon Icon="@Icons.Material.Outlined.HealthAndSafety" />
                             <span>Health</span>
                         </div>
                     </MudNavLink>

                     <MudNavLink Href="@RouteConst.Routes.Users">
                         <div style="color: #fff;">
                             <MudIcon Icon="@Icons.Material.Outlined.People" />
                         <span>Users</span>
                         </div>
                     </MudNavLink>

                 </MudNavGroup>
            }
         </AuthorizeView>
     </CascadingAuthenticationState>

        
    @if (!hasLogin)
    {
        <MudNavLink Href="@RouteConst.Routes.SignIn">
            <a>SignIn</a>
        </MudNavLink>
    }
    else
    {
        <MudButton Class="mt-5 fixed-bottom" Variant="Variant.Filled" FullWidth DisableElevation="true" Color="MudBlazor.Color.Primary" OnClick="@ClickLogout">Logout</MudButton>
    }
</MudNavMenu>

@code {
    private bool hasLogin = false;

    private CancellationTokenSource cancellationToken = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {

        }
        hasLogin = await LocalStorageService.CheckIfValidTokenExists();
        StateHasChanged();
    }
    public async Task ClickLogout()
    {
        await DialogHandler.ShowLogoutDialog(cancellationToken.Token);
    }
    protected override bool ShouldRender()
    {
        return base.ShouldRender();
    }
}
