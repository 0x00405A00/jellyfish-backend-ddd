// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240102211809_SampleUsers")]
    partial class SampleUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.Auths.Auth", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 387, DateTimeKind.Local).AddTicks(316))
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.Property<string>("LocalIp")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("local_ip");

                    b.Property<int>("LocalIpPort")
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasColumnName("local_port");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime")
                        .HasColumnName("logout_time");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("varchar(4096)")
                        .HasColumnName("refresh_token");

                    b.Property<DateTime>("RefreshTokenExpiresIn")
                        .HasColumnType("datetime")
                        .HasColumnName("refresh_token_expires_in");

                    b.Property<string>("RemoteIp")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("remote_ip");

                    b.Property<int>("RemoteIpPort")
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasColumnName("remote_port");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("varchar(4096)")
                        .HasColumnName("token");

                    b.Property<DateTime>("TokenExpiresIn")
                        .HasColumnType("datetime")
                        .HasColumnName("token_expires_in");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("browser_user_agent");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("user_uuid");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("UserId");

                    b.ToTable("auth", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Chats.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<Guid?>("CreatedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("created_by_uuid");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 387, DateTimeKind.Local).AddTicks(3416))
                        .HasColumnName("created_time");

                    b.Property<Guid?>("DeletedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("deleted_by_uuid");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<Guid?>("LastModifiedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("modified_by_uuid");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("CreatedByUserForeignKey");

                    b.HasIndex("DeletedByUserForeignKey");

                    b.HasIndex("LastModifiedByUserForeignKey");

                    b.ToTable("chat", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Chats.ChatRelationToUser", b =>
                {
                    b.Property<Guid>("UserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.Property<Guid>("ChatForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("chat_id");

                    b.Property<Guid?>("CreatedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("created_by_uuid");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 400, DateTimeKind.Local).AddTicks(8109))
                        .HasColumnName("created_time");

                    b.Property<Guid?>("DeletedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("deleted_by_uuid");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<Guid?>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<bool?>("IsChatAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_admin")
                        .HasComment("boolean value to describe if chatmember is chat-admin");

                    b.Property<Guid?>("LastModifiedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("modified_by_uuid");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.HasKey("UserForeignKey", "ChatForeignKey");

                    b.HasIndex("ChatForeignKey");

                    b.HasIndex("CreatedByUserForeignKey");

                    b.HasIndex("DeletedByUserForeignKey");

                    b.HasIndex("LastModifiedByUserForeignKey");

                    b.ToTable("chat_relation_to_user", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Mails.EmailSendingType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 427, DateTimeKind.Local).AddTicks(7033))
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("email_sending_type", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4f357ff-1c85-4e3c-b6b2-21ef4afba71f"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 431, DateTimeKind.Local).AddTicks(6310),
                            Name = "to"
                        },
                        new
                        {
                            Id = new Guid("c62db414-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 431, DateTimeKind.Local).AddTicks(6324),
                            Name = "cc"
                        },
                        new
                        {
                            Id = new Guid("c52db414-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 431, DateTimeKind.Local).AddTicks(6328),
                            Name = "bcc"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Mails.MailOutbox", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("body");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 428, DateTimeKind.Local).AddTicks(7550))
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("from");

                    b.Property<bool?>("IsBodyHtml")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_body_html")
                        .HasComment("boolean value to describe if email contain html content");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("subject");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("mail_outbox", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Mails.MailOutboxAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<string>("AttachmentPath")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("attachment_path");

                    b.Property<string>("AttachmentSha1")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("varchar(4096)")
                        .HasColumnName("attachment_sha1");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 430, DateTimeKind.Local).AddTicks(6629))
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("filename");

                    b.Property<bool?>("IsEmbededInHtml")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_embeded_in_html")
                        .HasComment("boolean value to describe if attachment is part of html mail");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.Property<Guid>("MailOutboxForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("mail_outbox_id");

                    b.Property<string>("MimeCid")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("mime_cid");

                    b.Property<string>("MimeMediaSubType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("mime_media_subtype");

                    b.Property<string>("MimeMediaType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("mime_media_type");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("MailOutboxForeignKey");

                    b.ToTable("mail_outbox_attachment", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Mails.MailOutboxRecipient", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 429, DateTimeKind.Local).AddTicks(2889))
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<Guid>("EmailSendingTypeForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("email_type_id");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.Property<Guid>("MailOutboxForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("mail_outbox_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("EmailSendingTypeForeignKey");

                    b.HasIndex("MailOutboxForeignKey");

                    b.ToTable("mail_outbox_recipient", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Messages.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<Guid>("ChatForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("chat_id");

                    b.Property<Guid?>("CreatedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("created_by_uuid");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 409, DateTimeKind.Local).AddTicks(8368))
                        .HasColumnName("created_time");

                    b.Property<Guid?>("DeletedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("deleted_by_uuid");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<Guid?>("LastModifiedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("modified_by_uuid");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT")
                        .HasColumnName("text");

                    b.Property<Guid>("UserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("ChatForeignKey");

                    b.HasIndex("CreatedByUserForeignKey");

                    b.HasIndex("DeletedByUserForeignKey");

                    b.HasIndex("LastModifiedByUserForeignKey");

                    b.HasIndex("UserForeignKey");

                    b.ToTable("message", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Messages.MessageOutbox", b =>
                {
                    b.Property<Guid>("MessageForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("message_id");

                    b.Property<Guid>("UserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 420, DateTimeKind.Local).AddTicks(6051))
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<Guid?>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.HasKey("MessageForeignKey", "UserForeignKey");

                    b.HasIndex("UserForeignKey");

                    b.ToTable("message_outbox", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Roles.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<Guid?>("CreatedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("created_by_uuid");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 355, DateTimeKind.Local).AddTicks(5613))
                        .HasColumnName("created_time");

                    b.Property<Guid?>("DeletedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("deleted_by_uuid");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<Guid?>("LastModifiedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("modified_by_uuid");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("CreatedByUserForeignKey");

                    b.HasIndex("DeletedByUserForeignKey");

                    b.HasIndex("LastModifiedByUserForeignKey");

                    b.ToTable("role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("776848df-084f-11ee-b2c8-7085c294413b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 361, DateTimeKind.Local).AddTicks(1264),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("8937df9c-fbef-11ed-8f81-7085c294413b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 361, DateTimeKind.Local).AddTicks(1289),
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("d411a531-fbea-11ed-8f81-7085c294413b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 361, DateTimeKind.Local).AddTicks(1292),
                            Name = "Root"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Users.ChatInviteRequest", b =>
                {
                    b.Property<Guid>("ChatForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("chat_id");

                    b.Property<Guid>("TargetUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("target_id");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 422, DateTimeKind.Local).AddTicks(9274))
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<Guid?>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.Property<Guid>("RequesterUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("requester_id");

                    b.Property<string>("TargetUserRequestMessage")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("request_message");

                    b.HasKey("ChatForeignKey", "TargetUserForeignKey");

                    b.HasIndex(new[] { "ChatForeignKey" }, "IDX_FK__CHATINVITEREQUEST_CHAT_TO_CHAT");

                    b.HasIndex(new[] { "RequesterUserForeignKey" }, "IDX_FK__CHATINVITEREQUEST_REQUESTERUSER_TO_USER");

                    b.HasIndex(new[] { "TargetUserForeignKey" }, "IDX_FK__CHATINVITEREQUEST_TARGETUSER_TO_USER");

                    b.ToTable("chat_invite_request", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Users.FriendshipRequest", b =>
                {
                    b.Property<Guid>("RequestUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("requester_id");

                    b.Property<Guid>("TargetUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("target_id");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 352, DateTimeKind.Local).AddTicks(337))
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<Guid?>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.Property<string>("TargetUserRequestMessage")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("request_message");

                    b.HasKey("RequestUserForeignKey", "TargetUserForeignKey");

                    b.HasIndex(new[] { "RequestUserForeignKey" }, "IDX_FK__FRIENDSHIPREQUEST_REQUESTERUSER_TO_USER");

                    b.HasIndex(new[] { "TargetUserForeignKey" }, "IDX_FK__FRIENDSHIPREQUEST_TARGETUSER_TO_USER");

                    b.ToTable("friendship_request", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<string>("ActivationCode")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("activation_code");

                    b.Property<DateTime?>("ActivationDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("activation_datetime");

                    b.Property<string>("ActivationToken")
                        .HasMaxLength(4096)
                        .HasColumnType("varchar(4096)")
                        .HasColumnName("activation_token");

                    b.Property<Guid?>("CreatedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("created_by_uuid");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 375, DateTimeKind.Local).AddTicks(3447))
                        .HasColumnName("created_time");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime")
                        .HasColumnName("date_of_birth");

                    b.Property<Guid?>("DeletedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("deleted_by_uuid");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("first_name");

                    b.Property<Guid?>("LastModifiedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("modified_by_uuid");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("password");

                    b.Property<string>("PasswordResetCode")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("password_reset_code");

                    b.Property<DateTime?>("PasswordResetExpiresIn")
                        .HasColumnType("datetime")
                        .HasColumnName("password_reset_token_expires_in");

                    b.Property<string>("PasswordResetToken")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("password_reset_token");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("phone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<Guid>("UserTypeForeignKey")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasDefaultValue(new Guid("c92db314-765b-46dd-bf40-ef7d5a5abd7b"))
                        .HasColumnName("user_type_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("CreatedByUserForeignKey");

                    b.HasIndex("DeletedByUserForeignKey");

                    b.HasIndex("LastModifiedByUserForeignKey");

                    b.HasIndex("UserTypeForeignKey");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            ActivationDateTime = new DateTime(2024, 1, 2, 22, 18, 9, 431, DateTimeKind.Local).AddTicks(5923),
                            DateOfBirth = new DateTime(2024, 1, 2, 22, 18, 9, 431, DateTimeKind.Local).AddTicks(5916),
                            Email = "root@localhost.local",
                            FirstName = "Root",
                            LastName = "Root",
                            Password = "root@localhost.local",
                            UserName = "Root",
                            UserTypeForeignKey = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef4afba71f")
                        },
                        new
                        {
                            Id = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef9afba21f"),
                            ActivationDateTime = new DateTime(2024, 1, 2, 22, 18, 9, 432, DateTimeKind.Local).AddTicks(8994),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 432, DateTimeKind.Local).AddTicks(9006),
                            DateOfBirth = new DateTime(1861, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vader.darth.sample@web.net",
                            FirstName = "Darth",
                            LastName = "Vader",
                            Password = "MG#81svd",
                            Phone = "4917512300",
                            UserName = "darth-vader",
                            UserTypeForeignKey = new Guid("c92db314-765b-46dd-bf40-ef7d5a5abd7b")
                        },
                        new
                        {
                            Id = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef8afba31f"),
                            ActivationDateTime = new DateTime(2024, 1, 2, 22, 18, 9, 432, DateTimeKind.Local).AddTicks(9831),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 432, DateTimeKind.Local).AddTicks(9843),
                            DateOfBirth = new DateTime(1861, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maul.darth.sample@web.net",
                            FirstName = "Darth",
                            LastName = "Maul",
                            Password = "CM&44tge",
                            Phone = "4917512300",
                            UserName = "darth-maul",
                            UserTypeForeignKey = new Guid("c92db314-765b-46dd-bf40-ef7d5a5abd7b")
                        },
                        new
                        {
                            Id = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef7afba41f"),
                            ActivationDateTime = new DateTime(2024, 1, 2, 22, 18, 9, 433, DateTimeKind.Local).AddTicks(627),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 433, DateTimeKind.Local).AddTicks(641),
                            DateOfBirth = new DateTime(1852, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "organa.laia.sample@web.net",
                            FirstName = "Laia",
                            LastName = "Organa",
                            Password = "XB*39avb",
                            Phone = "4917512300",
                            UserName = "princess-laia",
                            UserTypeForeignKey = new Guid("c92db314-765b-46dd-bf40-ef7d5a5abd7b")
                        },
                        new
                        {
                            Id = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef2afba51f"),
                            ActivationDateTime = new DateTime(2024, 1, 2, 22, 18, 9, 433, DateTimeKind.Local).AddTicks(1366),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 433, DateTimeKind.Local).AddTicks(1380),
                            DateOfBirth = new DateTime(1873, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "skywalker.luke.sample@web.net",
                            FirstName = "Luke",
                            LastName = "Skywalker",
                            Password = "NR*87utx",
                            Phone = "4917512300",
                            UserName = "luke-skywalker",
                            UserTypeForeignKey = new Guid("c92db314-765b-46dd-bf40-ef7d5a5abd7b")
                        },
                        new
                        {
                            Id = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef3afba61f"),
                            ActivationDateTime = new DateTime(2024, 1, 2, 22, 18, 9, 433, DateTimeKind.Local).AddTicks(2259),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 433, DateTimeKind.Local).AddTicks(2271),
                            DateOfBirth = new DateTime(1858, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thehut.jabba.sample@web.net",
                            FirstName = "Jabba",
                            LastName = "TheHut",
                            Password = "BO$67plf",
                            Phone = "4917512300",
                            UserName = "jabba-the-hut",
                            UserTypeForeignKey = new Guid("c92db314-765b-46dd-bf40-ef7d5a5abd7b")
                        },
                        new
                        {
                            Id = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef5afba61f"),
                            ActivationDateTime = new DateTime(2024, 1, 2, 22, 18, 9, 433, DateTimeKind.Local).AddTicks(2987),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 433, DateTimeKind.Local).AddTicks(3002),
                            DateOfBirth = new DateTime(1845, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "johnson.carl.sample@web.net",
                            FirstName = "Carl",
                            LastName = "Johnson",
                            Password = "CE#80txn",
                            Phone = "4917512300",
                            UserName = "carl-johnson",
                            UserTypeForeignKey = new Guid("c92db314-765b-46dd-bf40-ef7d5a5abd7b")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Users.UserHasRelationToFriend", b =>
                {
                    b.Property<Guid>("UserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.Property<Guid>("UserFriendForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("friend_id");

                    b.Property<Guid?>("CreatedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("created_by_uuid");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 341, DateTimeKind.Local).AddTicks(7384))
                        .HasColumnName("created_time");

                    b.Property<Guid?>("DeletedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("deleted_by_uuid");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<Guid?>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<Guid?>("LastModifiedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("modified_by_uuid");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.HasKey("UserForeignKey", "UserFriendForeignKey");

                    b.HasIndex("CreatedByUserForeignKey");

                    b.HasIndex("DeletedByUserForeignKey");

                    b.HasIndex("LastModifiedByUserForeignKey");

                    b.HasIndex(new[] { "UserForeignKey" }, "IDX_FK__USERHASRELATIONTOFRIEND_USERFK_TO_USER");

                    b.HasIndex(new[] { "UserFriendForeignKey" }, "IDX_FK__USERHASRELATIONTOFRIEND_USERFRIENDFK_TO_USER");

                    b.ToTable("user_has_relation_to_friend", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Users.UserHasRelationToRole", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<Guid?>("CreatedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("created_by_uuid");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 361, DateTimeKind.Local).AddTicks(4657))
                        .HasColumnName("created_time");

                    b.Property<Guid?>("DeletedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("deleted_by_uuid");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<Guid?>("LastModifiedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("modified_by_uuid");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.Property<Guid>("RoleForeignKey")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasDefaultValue(new Guid("8937df9c-fbef-11ed-8f81-7085c294413b"))
                        .HasColumnName("role_id");

                    b.Property<Guid>("UserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("CreatedByUserForeignKey");

                    b.HasIndex("DeletedByUserForeignKey");

                    b.HasIndex("LastModifiedByUserForeignKey");

                    b.HasIndex(new[] { "RoleForeignKey" }, "IDX_FK__USERHASRELATIONTOROLE_ROLEFK_TO_ROLE");

                    b.HasIndex(new[] { "UserForeignKey" }, "IDX_FK__USERHASRELATIONTOROLE_USERFK_TO_USER");

                    b.ToTable("user_has_relation_to_role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f7483142-a94f-496c-a395-6e99e7fde8cf"),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 431, DateTimeKind.Local).AddTicks(6091),
                            RoleForeignKey = new Guid("d411a531-fbea-11ed-8f81-7085c294413b"),
                            UserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b")
                        },
                        new
                        {
                            Id = new Guid("93cb8c0a-4baf-449c-ae05-7512711b661a"),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 431, DateTimeKind.Local).AddTicks(6150),
                            RoleForeignKey = new Guid("776848df-084f-11ee-b2c8-7085c294413b"),
                            UserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b")
                        },
                        new
                        {
                            Id = new Guid("37753954-ad8b-466f-bc3e-b378f10e80f1"),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 431, DateTimeKind.Local).AddTicks(6184),
                            RoleForeignKey = new Guid("8937df9c-fbef-11ed-8f81-7085c294413b"),
                            UserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b")
                        },
                        new
                        {
                            Id = new Guid("00716485-5dbd-4e8f-ba71-721dfef245be"),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 432, DateTimeKind.Local).AddTicks(9074),
                            RoleForeignKey = new Guid("8937df9c-fbef-11ed-8f81-7085c294413b"),
                            UserForeignKey = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef9afba21f")
                        },
                        new
                        {
                            Id = new Guid("95f69e57-6b98-41ee-8d23-c16ffab6739c"),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 432, DateTimeKind.Local).AddTicks(9906),
                            RoleForeignKey = new Guid("8937df9c-fbef-11ed-8f81-7085c294413b"),
                            UserForeignKey = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef8afba31f")
                        },
                        new
                        {
                            Id = new Guid("3ec68557-16d1-4fb6-aac7-09ae233853f7"),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 433, DateTimeKind.Local).AddTicks(719),
                            RoleForeignKey = new Guid("8937df9c-fbef-11ed-8f81-7085c294413b"),
                            UserForeignKey = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef7afba41f")
                        },
                        new
                        {
                            Id = new Guid("03bd0a66-1e14-4055-a264-cc24bf85952a"),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 433, DateTimeKind.Local).AddTicks(1456),
                            RoleForeignKey = new Guid("8937df9c-fbef-11ed-8f81-7085c294413b"),
                            UserForeignKey = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef2afba51f")
                        },
                        new
                        {
                            Id = new Guid("f06a708b-3e5c-46a3-94f5-ef3f6dafce03"),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 433, DateTimeKind.Local).AddTicks(2336),
                            RoleForeignKey = new Guid("8937df9c-fbef-11ed-8f81-7085c294413b"),
                            UserForeignKey = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef3afba61f")
                        },
                        new
                        {
                            Id = new Guid("68f7d16e-8eb1-431f-ad7f-3ce60b85cf90"),
                            CreatedByUserForeignKey = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 433, DateTimeKind.Local).AddTicks(3072),
                            RoleForeignKey = new Guid("8937df9c-fbef-11ed-8f81-7085c294413b"),
                            UserForeignKey = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef5afba61f")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Users.UserType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<Guid?>("CreatedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("created_by_uuid");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2024, 1, 2, 22, 18, 9, 334, DateTimeKind.Local).AddTicks(6344))
                        .HasColumnName("created_time");

                    b.Property<Guid?>("DeletedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("deleted_by_uuid");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<Guid?>("LastModifiedByUserForeignKey")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("modified_by_uuid");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("CreatedByUserForeignKey");

                    b.HasIndex("DeletedByUserForeignKey");

                    b.HasIndex("LastModifiedByUserForeignKey");

                    b.ToTable("user_type", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c92db314-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 431, DateTimeKind.Local).AddTicks(5656),
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("c3f267ff-1c85-4e3c-b6b2-21ef4afba71f"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 431, DateTimeKind.Local).AddTicks(5702),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef4afba71f"),
                            CreatedTime = new DateTime(2024, 1, 2, 22, 18, 9, 431, DateTimeKind.Local).AddTicks(5709),
                            Name = "Root"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Auths.Auth", b =>
                {
                    b.HasOne("Domain.Entities.Users.User", "User")
                        .WithMany("Auths")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__AUTH_USERID_TO_USER");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Chats.Chat", b =>
                {
                    b.HasOne("Domain.Entities.Users.User", "CreatedByUser")
                        .WithMany("CreatedChats")
                        .HasForeignKey("CreatedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__CHAT_CREATEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "DeletedByUser")
                        .WithMany("DeletedChats")
                        .HasForeignKey("DeletedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__CHAT_DELETEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "LastModifiedByUser")
                        .WithMany("ModifiedChats")
                        .HasForeignKey("LastModifiedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__CHAT_LASTMODIFIEDBYUSERFK_TO_USER");

                    b.OwnsOne("Domain.ValueObjects.Picture", "Picture", b1 =>
                        {
                            b1.Property<Guid>("ChatId")
                                .HasColumnType("char(36)");

                            b1.Property<byte[]>("Data")
                                .HasColumnType("longblob");

                            b1.Property<string>("FileExtension")
                                .HasColumnType("longtext")
                                .HasColumnName("picture_path_file_extension");

                            b1.Property<string>("FilePath")
                                .HasColumnType("longtext")
                                .HasColumnName("picture_path");

                            b1.HasKey("ChatId");

                            b1.ToTable("chat");

                            b1.WithOwner()
                                .HasForeignKey("ChatId");
                        });

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("Picture")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Chats.ChatRelationToUser", b =>
                {
                    b.HasOne("Domain.Entities.Chats.Chat", "Chat")
                        .WithMany("ChatRelationToUsers")
                        .HasForeignKey("ChatForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CHATRELATIONTOUSER_CHATFK_TO_CHAT");

                    b.HasOne("Domain.Entities.Users.User", "CreatedByUser")
                        .WithMany("CreatedChatRelationToUsers")
                        .HasForeignKey("CreatedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__CHATRELATIONTOUSER_CREATEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "DeletedByUser")
                        .WithMany("DeletedChatRelationToUsers")
                        .HasForeignKey("DeletedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__CHATRELATIONTOUSER_DELETEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "LastModifiedByUser")
                        .WithMany("ModifiedChatRelationToUsers")
                        .HasForeignKey("LastModifiedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__CHATRELATIONTOUSER_LASTMODIFIEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "User")
                        .WithMany("ChatRelationToUsers")
                        .HasForeignKey("UserForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CHATRELATIONTOUSER_USERFK_TO_USER");

                    b.Navigation("Chat");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Mails.MailOutboxAttachment", b =>
                {
                    b.HasOne("Domain.Entities.Mails.MailOutbox", "Mail")
                        .WithMany("Attachments")
                        .HasForeignKey("MailOutboxForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__MAILOUTBOXATTACHMENT_MAILOUTBOXFK_TO_MAILOUTBOX");

                    b.Navigation("Mail");
                });

            modelBuilder.Entity("Domain.Entities.Mails.MailOutboxRecipient", b =>
                {
                    b.HasOne("Domain.Entities.Mails.EmailSendingType", "SendingType")
                        .WithMany("MailOutboxRecipients")
                        .HasForeignKey("EmailSendingTypeForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__MAILOUTBOXRECIPIENT_EMAILSENDINGTYPEFK_TO_EMAILSENDINGTYPE");

                    b.HasOne("Domain.Entities.Mails.MailOutbox", "Mail")
                        .WithMany("Recipients")
                        .HasForeignKey("MailOutboxForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__MAILOUTBOXRECIPIENT_MAILOUTBOXFK_TO_MAILOUTBOX");

                    b.Navigation("Mail");

                    b.Navigation("SendingType");
                });

            modelBuilder.Entity("Domain.Entities.Messages.Message", b =>
                {
                    b.HasOne("Domain.Entities.Chats.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__MESSAGE_CHATFK_TO_CHAT");

                    b.HasOne("Domain.Entities.Users.User", "CreatedByUser")
                        .WithMany("CreatedMessages")
                        .HasForeignKey("CreatedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__MESSAGE_CREATEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "DeletedByUser")
                        .WithMany("DeletedMessages")
                        .HasForeignKey("DeletedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__MESSAGE_DELETEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "LastModifiedByUser")
                        .WithMany("ModifiedMessages")
                        .HasForeignKey("LastModifiedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__MESSAGE_LASTMODIFIEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__MESSAGE_USERFK_TO_USER");

                    b.OwnsOne("Domain.ValueObjects.MediaContent", "MediaContent", b1 =>
                        {
                            b1.Property<Guid>("MessageId")
                                .HasColumnType("char(36)");

                            b1.Property<byte[]>("Data")
                                .HasColumnType("longblob")
                                .HasColumnName("binary_content_base64");

                            b1.Property<string>("FileExtension")
                                .HasMaxLength(50)
                                .HasColumnType("varchar(50)")
                                .HasColumnName("binary_content_base64_mime_type");

                            b1.Property<string>("FilePath")
                                .HasMaxLength(1024)
                                .HasColumnType("varchar(1024)")
                                .HasColumnName("binary_content_path");

                            b1.HasKey("MessageId");

                            b1.ToTable("message");

                            b1.WithOwner()
                                .HasForeignKey("MessageId");
                        });

                    b.Navigation("Chat");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("MediaContent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Messages.MessageOutbox", b =>
                {
                    b.HasOne("Domain.Entities.Messages.Message", "Message")
                        .WithMany("MessagesInOutbox")
                        .HasForeignKey("MessageForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__MESSAGEOUTBOX_MESSAGEFK_TO_CHAT");

                    b.HasOne("Domain.Entities.Users.User", "User")
                        .WithMany("MessagesInOutbox")
                        .HasForeignKey("UserForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__MESSAGEOUTBOX_USERFK_TO_USER");

                    b.Navigation("Message");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Roles.Role", b =>
                {
                    b.HasOne("Domain.Entities.Users.User", "CreatedByUser")
                        .WithMany("CreatedRoles")
                        .HasForeignKey("CreatedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__ROLE_CREATEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "DeletedByUser")
                        .WithMany("DeletedRoles")
                        .HasForeignKey("DeletedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__ROLE_DELETEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "LastModifiedByUser")
                        .WithMany("ModifiedRoles")
                        .HasForeignKey("LastModifiedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__ROLE_LASTMODIFIEDBYUSERFK_TO_USER");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("LastModifiedByUser");
                });

            modelBuilder.Entity("Domain.Entities.Users.ChatInviteRequest", b =>
                {
                    b.HasOne("Domain.Entities.Chats.Chat", "Chat")
                        .WithMany("ChatInvitesToUsers")
                        .HasForeignKey("ChatForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CHATINVITEREQUEST_CHATFK_TO_CHAT");

                    b.HasOne("Domain.Entities.Users.User", "RequesterUser")
                        .WithMany("ChatInvitesWhereIamRequester")
                        .HasForeignKey("RequesterUserForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CHATINVITEREQUEST_REQUESTERUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "TargetUser")
                        .WithMany("ChatInvitesWhereIamTarget")
                        .HasForeignKey("TargetUserForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CHATINVITEREQUEST_TARGETUSERFK_TO_USER");

                    b.Navigation("Chat");

                    b.Navigation("RequesterUser");

                    b.Navigation("TargetUser");
                });

            modelBuilder.Entity("Domain.Entities.Users.FriendshipRequest", b =>
                {
                    b.HasOne("Domain.Entities.Users.User", "RequesterUser")
                        .WithMany("FriendshipRequestsWhereIamRequester")
                        .HasForeignKey("RequestUserForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__FRIENDSHIPREQUEST_REQUESTUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "TargetUser")
                        .WithMany("FriendshipRequestsWhereIamTarget")
                        .HasForeignKey("TargetUserForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__FRIENDSHIPREQUEST_TARGETUSERFK_TO_USER");

                    b.Navigation("RequesterUser");

                    b.Navigation("TargetUser");
                });

            modelBuilder.Entity("Domain.Entities.Users.User", b =>
                {
                    b.HasOne("Domain.Entities.Users.User", "CreatedByUser")
                        .WithMany("CreatedUsers")
                        .HasForeignKey("CreatedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__USER_CREATEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "DeletedByUser")
                        .WithMany("DeletedUsers")
                        .HasForeignKey("DeletedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__USER_DELETEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "LastModifiedByUser")
                        .WithMany("ModifiedUsers")
                        .HasForeignKey("LastModifiedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__USER_LASTMODIFIEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__USER_USERTYPEFK_TO_USERTYPE");

                    b.OwnsOne("Domain.ValueObjects.Picture", "Picture", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<byte[]>("Data")
                                .HasColumnType("longblob");

                            b1.Property<string>("FileExtension")
                                .HasColumnType("longtext")
                                .HasColumnName("profile_picture_fileext");

                            b1.Property<string>("FilePath")
                                .HasColumnType("longtext")
                                .HasColumnName("profile_picture_path");

                            b1.HasKey("UserId");

                            b1.ToTable("user");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("Picture")
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("Domain.Entities.Users.UserHasRelationToFriend", b =>
                {
                    b.HasOne("Domain.Entities.Users.User", "CreatedByUser")
                        .WithMany("CreatedUserHasRelationToFriends")
                        .HasForeignKey("CreatedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__USERHASRELATIONTOFRIEND_CREATEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "DeletedByUser")
                        .WithMany("DeletedUserHasRelationToFriends")
                        .HasForeignKey("DeletedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__USERHASRELATIONTOFRIEND_DELETEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "LastModifiedByUser")
                        .WithMany("ModifiedUserHasRelationToFriends")
                        .HasForeignKey("LastModifiedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__USERHASRELATIONTOFRIEND_LASTMODIFIEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "User")
                        .WithMany("FriendshipsThatIAccepted")
                        .HasForeignKey("UserForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__USERHASRELATIONTOFRIEND_USERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "UserFriend")
                        .WithMany("FriendshipsThatIRequested")
                        .HasForeignKey("UserFriendForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__USERHASRELATIONTOFRIEND_USERFRIENDFK_TO_USER");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("User");

                    b.Navigation("UserFriend");
                });

            modelBuilder.Entity("Domain.Entities.Users.UserHasRelationToRole", b =>
                {
                    b.HasOne("Domain.Entities.Users.User", "CreatedByUser")
                        .WithMany("CreatedUserHasRelationToRoles")
                        .HasForeignKey("CreatedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__USERHASRELATIONTOROLE_CREATEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "DeletedByUser")
                        .WithMany("DeletedUserHasRelationToRoles")
                        .HasForeignKey("DeletedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__USERHASRELATIONTOROLE_DELETEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "LastModifiedByUser")
                        .WithMany("ModifiedUserHasRelationToRoles")
                        .HasForeignKey("LastModifiedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__USERHASRELATIONTOROLE_LASTMODIFIEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Roles.Role", "Role")
                        .WithMany("UserHasRelationToRoles")
                        .HasForeignKey("RoleForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__USERHASRELATIONTOROLE_ROLEFK_TO_ROLE");

                    b.HasOne("Domain.Entities.Users.User", "User")
                        .WithMany("UserHasRelationToRoles")
                        .HasForeignKey("UserForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__USERHASRELATIONTOROLE_USERFK_TO_USER");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Users.UserType", b =>
                {
                    b.HasOne("Domain.Entities.Users.User", "CreatedByUser")
                        .WithMany("CreatedUserTypes")
                        .HasForeignKey("CreatedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__USERTYPE_CREATEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "DeletedByUser")
                        .WithMany("DeletedUserTypes")
                        .HasForeignKey("DeletedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__USERTYPE_DELETEDBYUSERFK_TO_USER");

                    b.HasOne("Domain.Entities.Users.User", "LastModifiedByUser")
                        .WithMany("ModifiedUserTypes")
                        .HasForeignKey("LastModifiedByUserForeignKey")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__USERTYPE_LASTMODIFIEDBYUSERFK_TO_USER");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("LastModifiedByUser");
                });

            modelBuilder.Entity("Domain.Entities.Chats.Chat", b =>
                {
                    b.Navigation("ChatInvitesToUsers");

                    b.Navigation("ChatRelationToUsers");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Domain.Entities.Mails.EmailSendingType", b =>
                {
                    b.Navigation("MailOutboxRecipients");
                });

            modelBuilder.Entity("Domain.Entities.Mails.MailOutbox", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Recipients");
                });

            modelBuilder.Entity("Domain.Entities.Messages.Message", b =>
                {
                    b.Navigation("MessagesInOutbox");
                });

            modelBuilder.Entity("Domain.Entities.Roles.Role", b =>
                {
                    b.Navigation("UserHasRelationToRoles");
                });

            modelBuilder.Entity("Domain.Entities.Users.User", b =>
                {
                    b.Navigation("Auths");

                    b.Navigation("ChatInvitesWhereIamRequester");

                    b.Navigation("ChatInvitesWhereIamTarget");

                    b.Navigation("ChatRelationToUsers");

                    b.Navigation("CreatedChatRelationToUsers");

                    b.Navigation("CreatedChats");

                    b.Navigation("CreatedMessages");

                    b.Navigation("CreatedRoles");

                    b.Navigation("CreatedUserHasRelationToFriends");

                    b.Navigation("CreatedUserHasRelationToRoles");

                    b.Navigation("CreatedUserTypes");

                    b.Navigation("CreatedUsers");

                    b.Navigation("DeletedChatRelationToUsers");

                    b.Navigation("DeletedChats");

                    b.Navigation("DeletedMessages");

                    b.Navigation("DeletedRoles");

                    b.Navigation("DeletedUserHasRelationToFriends");

                    b.Navigation("DeletedUserHasRelationToRoles");

                    b.Navigation("DeletedUserTypes");

                    b.Navigation("DeletedUsers");

                    b.Navigation("FriendshipRequestsWhereIamRequester");

                    b.Navigation("FriendshipRequestsWhereIamTarget");

                    b.Navigation("FriendshipsThatIAccepted");

                    b.Navigation("FriendshipsThatIRequested");

                    b.Navigation("Messages");

                    b.Navigation("MessagesInOutbox");

                    b.Navigation("ModifiedChatRelationToUsers");

                    b.Navigation("ModifiedChats");

                    b.Navigation("ModifiedMessages");

                    b.Navigation("ModifiedRoles");

                    b.Navigation("ModifiedUserHasRelationToFriends");

                    b.Navigation("ModifiedUserHasRelationToRoles");

                    b.Navigation("ModifiedUserTypes");

                    b.Navigation("ModifiedUsers");

                    b.Navigation("UserHasRelationToRoles");
                });

            modelBuilder.Entity("Domain.Entities.Users.UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
